/* eslint-disable quote-props */
/* eslint-disable quotes */

var turf = require('@turf/turf');

const movingTrainsCoord = [
  //Chambers to Park Place - 18 entries
  [-74.0092660004712, 40.71547766602407],
  [-74.00724899911688, 40.71803166728803],
  [-74.00722699934337, 40.718062666024935],
  [-74.0072059997474, 40.718094666962514],
  [-74.00718600140478, 40.71812666693311],
  [-74.00716699969054, 40.718159667304604],
  [-74.00714999932315, 40.718192666647994],
  [-74.00713300033658, 40.71822766692177],
  [-74.00711700013385, 40.71826166576409],
  [-74.00710300031344, 40.71829766631418],
  [-74.0070890004778, 40.718333665961914],
  [-74.0070769996311, 40.7183696663854],
  [-74.00706599907765, 40.71840766587807],
  [-74.00705499969544, 40.71844566717045],
  [-74.00704599930788, 40.71848366653827],
  [-74.0070380002953, 40.71852266631043],
  [-74.00703100029207, 40.71856266738787],
  [-74.00688599918587, 40.71931766721322],
  [-74.0065709996692, 40.709415666069596],
  [-74.00586900029944, 40.710147667212645],
  [-74.00583599947402, 40.71019466655424],
  [-74.00580299964676, 40.71025366699464],
  [-74.00577699974454, 40.71031466620818],
  [-74.0057629994808, 40.71037566751678],
  [-74.0057609988881, 40.710436666422275],
  [-74.00577200016902, 40.710495666442434],
  [-74.00580500011749, 40.710558666323614],
  [-74.00584799972805, 40.71061966565261],
  [-74.0059490009974, 40.71072566591183],
  [-74.00685400025873, 40.71158166635006],
  [-74.00695399954549, 40.71168466707318],
  [-74.00703499923617, 40.71178766797021],
  [-74.00728900032101, 40.712144665933025],
  [-74.00737100009506, 40.712238666820625],
  [-74.00745299936403, 40.71233666681647],
  [-74.00754799966599, 40.71243066673323],
  [-74.0076669996913, 40.712518666673326],
  [-74.00781299893856, 40.71259566672404],
  [-74.00796199853681, 40.71266266621112],
  [-74.00881099992978, 40.71305066768981],
  //Fulton to Wall St - 4 entries
  [-74.00910000076378, 40.70682066656401],
  [-74.00859200104075, 40.707381666487144],
  [-74.00817199947087, 40.70781066638872],
  [-74.0065709996692, 40.709415666069596],
  //Wall St to Clark - 23 entries
  [-73.99308599943733, 40.69746566677518],
  [-74.00290999918484, 40.70017366620592],
  [-74.0036520005466, 40.700422665453054],
  [-74.00425999970162, 40.70063466651007],
  [-74.00470999970256, 40.700827666518705],
  [-74.0051849994357, 40.70106766676241],
  [-74.00565900115897, 40.701344667123045],
  [-74.00607300034058, 40.70160266700191],
  [-74.00650800091199, 40.70192366670962],
  [-74.00712699946145, 40.70246366699303],
  [-74.00950399930943, 40.70457066739075],
  [-74.00973699962229, 40.70476966637192],
  [-74.00989199919299, 40.7049696675718],
  [-74.00995699963235, 40.70508266625601],
  [-74.00998699989806, 40.70517666625095],
  [-74.00999600035573, 40.70528066644147],
  [-74.00998100015123, 40.705379667272815],
  [-74.00993800042761, 40.70556666760002],
  [-74.00988900058373, 40.70573466673071],
  [-74.00980099982405, 40.70592166725336],
  [-74.00967000117375, 40.70614066739406],
  [-74.00948799992136, 40.706374666909696],
  [-74.00910000076378, 40.70682066656401],
  //Clark to Borough Hall - 35 entries
  [-73.98999800083993, 40.69321866642143],
  [-73.99033800025441, 40.693904666519074],
  [-73.99035600077737, 40.69394066782861],
  [-73.99037300040904, 40.69397666725045],
  [-73.99039000005905, 40.694012666669586],
  [-73.99040699958347, 40.69404966655571],
  [-73.99042300058038, 40.69408666635612],
  [-73.9904390004118, 40.6941236670545],
  [-73.99045399920412, 40.694161667236614],
  [-73.9904700001111, 40.69419966659911],
  [-73.99048399920638, 40.69423766669414],
  [-73.9904990002738, 40.69427666643917],
  [-73.99051300044255, 40.694315667000104],
  [-73.9905260008943, 40.694354666576295],
  [-73.99053999991222, 40.69439366623295],
  [-73.9905520005185, 40.69443366619327],
  [-73.99056500087433, 40.69447366713464],
  [-73.99115599994765, 40.696369667738416],
  [-73.99117699965642, 40.69644166622538],
  [-73.9912000014405, 40.69651266619259],
  [-73.99122500109922, 40.69657866666161],
  [-73.99125499872608, 40.69664266656577],
  [-73.99128800071088, 40.696704666650845],
  [-73.99132900025181, 40.69676266725241],
  [-73.99137399933456, 40.69681766583026],
  [-73.99142300032867, 40.69686966688247],
  [-73.99147699958777, 40.69691766640644],
  [-73.99153600040822, 40.696963667135066],
  [-73.99159899959855, 40.69700666581662],
  [-73.99166699942272, 40.69704566745098],
  [-73.99173999963004, 40.697082666664286],
  [-73.99181599973429, 40.69711566686883],
  [-73.99189700009585, 40.69714766600536],
  [-73.99201799985318, 40.697179666965276],
  [-73.99308599943733, 40.69746566677518],
  //Borough to Hoyt - 18 entries
  [-73.98049199914621, 40.68824566584478],
  [-73.98065399892059, 40.688474665843515],
  [-73.98069700000673, 40.68853266612864],
  [-73.98074000058976, 40.688592667337936],
  [-73.98078500051643, 40.68864866698305],
  [-73.98083299946508, 40.68870466710964],
  [-73.98088400095608, 40.68875666763417],
  [-73.98094100071532, 40.688807666857976],
  [-73.98100100036972, 40.68885566693844],
  [-73.98106499928564, 40.688901667605236],
  [-73.98113300011491, 40.68894466748123],
  [-73.98120500110943, 40.688986666599405],
  [-73.98128000053383, 40.689026667020364],
  [-73.98135999971748, 40.689061666751094],
  [-73.9814439990653, 40.68909566660077],
  [-73.98152900052008, 40.689129666549796],
  [-73.9816160001898, 40.68916366675516],
  [-73.9850649999924, 40.69054466728554]
]

//NEEDS TO BE REVERSED - MISSING A SUBSTANTIAL CURVE BETWEEN CHAMBERS AND PARK
const maybeChambersToPark = [
  [-74.01018799986436, 40.71430266706666],
  [-74.00929899996392, 40.71543666673267],
  [-74.0092660004712, 40.71547766602407]
]

//WRONG - UNCLEAR WHAT THIS IS
const chambersToPark = [
  [-74.0092660004712, 40.71547766602407],
  [-74.00724899911688, 40.71803166728803],
  [-74.00722699934337, 40.718062666024935],
  [-74.0072059997474, 40.718094666962514],
  [-74.00718600140478, 40.71812666693311],
  [-74.00716699969054, 40.718159667304604],
  [-74.00714999932315, 40.718192666647994],
  [-74.00713300033658, 40.71822766692177],
  [-74.00711700013385, 40.71826166576409],
  [-74.00710300031344, 40.71829766631418],
  [-74.0070890004778, 40.718333665961914],
  [-74.0070769996311, 40.7183696663854],
  [-74.00706599907765, 40.71840766587807],
  [-74.00705499969544, 40.71844566717045],
  [-74.00704599930788, 40.71848366653827],
  [-74.0070380002953, 40.71852266631043],
  [-74.00703100029207, 40.71856266738787],
  [-74.00688599918587, 40.71931766721322]
]

//NEEDS TO BE REVERSED
const parkToFulton = [
  [-74.0065709996692, 40.709415666069596],
  [-74.00586900029944, 40.710147667212645],
  [-74.00583599947402, 40.71019466655424],
  [-74.00580299964676, 40.71025366699464],
  [-74.00577699974454, 40.71031466620818],
  [-74.0057629994808, 40.71037566751678],
  [-74.0057609988881, 40.710436666422275],
  [-74.00577200016902, 40.710495666442434],
  [-74.00580500011749, 40.710558666323614],
  [-74.00584799972805, 40.71061966565261],
  [-74.0059490009974, 40.71072566591183],
  [-74.00685400025873, 40.71158166635006],
  [-74.00695399954549, 40.71168466707318],
  [-74.00703499923617, 40.71178766797021],
  [-74.00728900032101, 40.712144665933025],
  [-74.00737100009506, 40.712238666820625],
  [-74.00745299936403, 40.71233666681647],
  [-74.00754799966599, 40.71243066673323],
  [-74.0076669996913, 40.712518666673326],
  [-74.00781299893856, 40.71259566672404],
  [-74.00796199853681, 40.71266266621112],
  [-74.00881099992978, 40.71305066768981]
]

//NEEDS TO BE REVERSED
const fultonToWall = [
  [-74.00910000076378, 40.70682066656401],
  [-74.00859200104075, 40.707381666487144],
  [-74.00817199947087, 40.70781066638872],
  [-74.0065709996692, 40.709415666069596]
]

//NEEDS TO BE REVERSED
const wallToClark = [
  [-73.99308599943733, 40.69746566677518],
  [-74.00290999918484, 40.70017366620592],
  [-74.0036520005466, 40.700422665453054],
  [-74.00425999970162, 40.70063466651007],
  [-74.00470999970256, 40.700827666518705],
  [-74.0051849994357, 40.70106766676241],
  [-74.00565900115897, 40.701344667123045],
  [-74.00607300034058, 40.70160266700191],
  [-74.00650800091199, 40.70192366670962],
  [-74.00712699946145, 40.70246366699303],
  [-74.00950399930943, 40.70457066739075],
  [-74.00973699962229, 40.70476966637192],
  [-74.00989199919299, 40.7049696675718],
  [-74.00995699963235, 40.70508266625601],
  [-74.00998699989806, 40.70517666625095],
  [-74.00999600035573, 40.70528066644147],
  [-74.00998100015123, 40.705379667272815],
  [-74.00993800042761, 40.70556666760002],
  [-74.00988900058373, 40.70573466673071],
  [-74.00980099982405, 40.70592166725336],
  [-74.00967000117375, 40.70614066739406],
  [-74.00948799992136, 40.706374666909696],
  [-74.00910000076378, 40.70682066656401]
]

//NEEDS TO BE REVERSED
const clarkToBorough = [
  [-73.98999800083993, 40.69321866642143],
  [-73.99033800025441, 40.693904666519074],
  [-73.99035600077737, 40.69394066782861],
  [-73.99037300040904, 40.69397666725045],
  [-73.99039000005905, 40.694012666669586],
  [-73.99040699958347, 40.69404966655571],
  [-73.99042300058038, 40.69408666635612],
  [-73.9904390004118, 40.6941236670545],
  [-73.99045399920412, 40.694161667236614],
  [-73.9904700001111, 40.69419966659911],
  [-73.99048399920638, 40.69423766669414],
  [-73.9904990002738, 40.69427666643917],
  [-73.99051300044255, 40.694315667000104],
  [-73.9905260008943, 40.694354666576295],
  [-73.99053999991222, 40.69439366623295],
  [-73.9905520005185, 40.69443366619327],
  [-73.99056500087433, 40.69447366713464],
  [-73.99115599994765, 40.696369667738416],
  [-73.99117699965642, 40.69644166622538],
  [-73.9912000014405, 40.69651266619259],
  [-73.99122500109922, 40.69657866666161],
  [-73.99125499872608, 40.69664266656577],
  [-73.99128800071088, 40.696704666650845],
  [-73.99132900025181, 40.69676266725241],
  [-73.99137399933456, 40.69681766583026],
  [-73.99142300032867, 40.69686966688247],
  [-73.99147699958777, 40.69691766640644],
  [-73.99153600040822, 40.696963667135066],
  [-73.99159899959855, 40.69700666581662],
  [-73.99166699942272, 40.69704566745098],
  [-73.99173999963004, 40.697082666664286],
  [-73.99181599973429, 40.69711566686883],
  [-73.99189700009585, 40.69714766600536],
  [-73.99201799985318, 40.697179666965276],
  [-73.99308599943733, 40.69746566677518]
]

//WRONG SEGMENT - THIS COVERS HOYT TO NEVINS
const boroughToHoyt = [
  [-73.98049199914621, 40.68824566584478],
  [-73.98065399892059, 40.688474665843515],
  [-73.98069700000673, 40.68853266612864],
  [-73.98074000058976, 40.688592667337936],
  [-73.98078500051643, 40.68864866698305],
  [-73.98083299946508, 40.68870466710964],
  [-73.98088400095608, 40.68875666763417],
  [-73.98094100071532, 40.688807666857976],
  [-73.98100100036972, 40.68885566693844],
  [-73.98106499928564, 40.688901667605236],
  [-73.98113300011491, 40.68894466748123],
  [-73.98120500110943, 40.688986666599405],
  [-73.98128000053383, 40.689026667020364],
  [-73.98135999971748, 40.689061666751094],
  [-73.9814439990653, 40.68909566660077],
  [-73.98152900052008, 40.689129666549796],
  [-73.9816160001898, 40.68916366675516],
  [-73.9850649999924, 40.69054466728554]
]

function format(arr) {
  let str = ''
  let betterArr = []

  for (let elem of arr) {
    let newElem = [elem[1], elem[0]]
    betterArr.push(newElem)
    for (let i = 0; i < newElem.length; i++) {
      str += newElem[i].toString(10)
      if (i === 0) {
        str += ','
      }
    }
    str += '\n'
  }

  return { str, betterArr }
}

const one = maybeChambersToPark.reverse()

const two = parkToFulton.reverse()

const three = fultonToWall.reverse()

const four = wallToClark.reverse()

const five = clarkToBorough.reverse()

const final = one.concat(two).concat(three).concat(four).concat(five)

let fin = format(final)

function createGeoArr(latLonArr) {
  //for holding all the geoJSON lines.  Each element of this array will represent a line segment of the overall subway path
  const geoArr = []

  //generating the geoJSON objects
  for (let i = 1; i < latLonArr.length; i++) {
    //The origin of each line will be the previous point in the array, and the destination will be the current point
    let origin = latLonArr[i - 1]
    let destination = latLonArr[i]

    //geoJSON formatting.  The critical element is the coordinates array
    let newGeo = {
      "type": "FeatureCollection",
      "features": [{
        "type": "Feature",
        "geometry": {
          "type": "LineString",
          "coordinates": [origin, destination]
        }
      }]
    }

    //pushing the new geoJSON object to the parent array
    geoArr.push(newGeo)
  }

  return geoArr
}

//Calculates the total line distance of an array of geoJSON line segments
function calculateTotalDistance(geoArr) {
  //Initializing the total distance, to be added to with each segment processed
  let totalDist = 0

  let totalSegs = 0

  //For each line segment, use turf to calculate its length and add that to the total
  for (let elem of geoArr) {
    let segmentDistance = turf.length(elem.features[0], { units: 'kilometers' });
    totalDist += segmentDistance
    totalSegs++
  }

  return [totalDist, totalSegs]
}

//ANIMATE ON THIS ARRAY -------------------------------------->>>
let testGeo = createGeoArr(fin.betterArr)
//------------------------------------------------------------>>>

let totalD = calculateTotalDistance(testGeo)

console.log(totalD)

//mapcustomizer.com
